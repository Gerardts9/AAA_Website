[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Website",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.\n\n\n\n\nGTEx Pipeline for AAA RNAseq Analysis\n\n\n\n\n\nInstall RNAseQC and samtools, then modify .bashrc file to make them callable from anywhere:\n\n\nmkdir opt cd opt mkdir rnaseqc cd rnadeqc wget https://github.com/getzlab/rnaseqc/releases/download/v2.3.6/rnaseqc.v2.3.6.linux.gz gunzip rnaseqc.v2.3.6.linux.gz && mv rnaseqc.v2.3.6.linux rnaseqc && chmod 775 rnaseqc PATH=$PATH:/home/gerard/opt/rnaseqc pip3 install rnaseqc\n\n\n\nAdd to /home/gerard/.bashrc file:\nexport PATH=\\(PATH:/home/gerard/samtools-1.16.1 export PATH=\\)PATH:/home/gerard/opt/rnaseqc #######################################################################################################################################################################\n\n\nIn R, create a list with the files that will be used in the pipeline steps:\n\n\nff <- list.files(path = “/home/datasets/aaa/AAA.d.RNAseq/FastQ”,pattern = “R1_001.fastq.gz”, recursive = ”TRUE”, full.names = F) ff <- gsub(”./”,““,ff) ff <- sub(”^([^_]*_[^_]).”, “\\1”, ff)\n\n\n\nPrepare array for the STAR step, where we need the name to include the “_S#“:\nwrite.table(ff, “/home/gerard/Array_STAR.txt”, quote = F, sep = ““, row.names = F, col.names = F)\n\n\nNow, prepare array for the other steps, without the “_S#“:\nff <- gsub(“_.*“,”“,ff)\n#write.table(ff, “/home/gerard/Array_Others.txt”, quote = F, sep = ““, row.names = F, col.names = F) #######################################################################################################################################################################\n\n\nTo set the Array_STAR.txt file as array in bash:\n\n\nmapfile -t arr < /home/gerard/Array_STAR.txt #######################################################################################################################################################################\n\n\n\nWe receive FASTQ files from the sequencing company, therefore, the first step in the GTEx pipeline is not required.\n\n\n\n\n\nBAM to FASTQ conversion\nfor i in *.bam;do sample_id=${i:0:7} docker run –rm -v \\(path_to_data:/data -t broadinstitute/gtex_rnaseq \\\n/bin/bash -c \"/src/run_SamToFastq.py /data/\\)i -p ${sample_id} -o /data” done #######################################################################################################################################################################\n\n\nOnly one time, to create the STAR index:\n\n\n\n\n\nBuild the STAR index, using the gencode version v26, and for reads of length 149:\nmkdir STARv275a_genome_GRCh38_noALT_noHLA_noDecoy_v26_oh149\ndocker run –rm -v $path_to_data:/data -t broadinstitute/gtex_rnaseq:V10\n/bin/bash -c “STAR\n–runMode genomeGenerate\n–genomeDir /data/STARv275a_genome_GRCh38_noALT_noHLA_noDecoy_v26_oh149\n–genomeFastaFiles /data/Homo_sapiens_assembly38_noALT_noHLA_noDecoy_ERCC.fasta\n–sjdbGTFfile /data/gencode.v26.GRCh38.annotation.ERCC92.gtf\n–sjdbOverhang 149\n–runThreadN 16” #######################################################################################################################################################################\n\n\nOnly one time, to create the RSEM index:\n\n\n\n\n\nBuild the RSEM index:\ndocker run –rm -v $path_to_data:/data -t broadinstitute/gtex_rnaseq:V10\n/bin/bash -c “rsem-prepare-reference\n/data/GTEx/Homo_sapiens_assembly38_noALT_noHLA_noDecoy_ERCC.fasta\n/data/GTEx/rsem_reference/rsem_reference\n–gtf /data/GTEx/gencode.v26.GRCh38.annotation.ERCC92.gtf\n–num-threads 16” #######################################################################################################################################################################\n\n\nSTAR alignment:\n\n\npath_to_data=“/home/gerard/RNAseq”\nfor i in “\\({arr[0]}\";do folder=\\){i:0:9} cp -r /home/datasets/aaa/AAA.d.RNAseq/FastQ/${folder} /home/gerard/RNAseq echo Folder ${folder} has been copied! docker run –rm -v \\(path_to_data:/data -t broadinstitute/gtex_rnaseq:V10 \\\n/bin/bash -c \"/src/run_STAR.py \\\n/data/GTEx/STARv275a_genome_GRCh38_noALT_noHLA_noDecoy_v26_oh149 \\\n/data/\\){folder}/\\({i}_R1_001.fastq.gz \\\n/data/\\){folder}/${i}_R2_001.fastq.gz\n\\(folder \\\n--threads 28 \\\n--output_dir /tmp/star_out && mv /tmp/star_out /data/GTEx/\\){folder}” rm -r /home/gerard/RNAseq/${folder} echo Folder ${folder} has been removed! done #######################################################################################################################################################################\n\n\n\nTo set the Array_Others.txt file as array in bash:\n\n\nmapfile -t arr < /home/gerard/Array_Others.txt #######################################################################################################################################################################\n\n\n\nAfter obtaining the SAM aligned files, we run RSeQC with one of them to identify the type of data we have:\n\n\npython3 ./anaconda3/bin/infer_experiment.py -r /home/gerard/RNAseq/GTEx/BED/hg38_RefSeq.bed -i /home/gerard/RNAseq/GTEx/22ID00809/22ID00809.Aligned.sortedByCoord.out.bam\nOutput:\nReading reference gene model /home/gerard/RNAseq/GTEx/BED/hg38_RefSeq.bed … Done Loading SAM/BAM file … Total 200000 usable reads were sampled\nThis is PairEnd Data Fraction of reads failed to determine: 0.0185 Fraction of reads explained by “1++,1–,2+-,2-+”: 0.0187 Fraction of reads explained by “1+-,1-+,2++,2–”: 0.9628\n\n\n\nIndicates that is paired-end STRANDED.\n\n\n\n\n\nSync BAMs (optional; copy QC flags and read group IDs): NOT DONE\n\n\nfor i in “${arr[@]}”;do docker run –rm -v \\(path_to_data:/data -t broadinstitute/gtex_rnaseq:V10 \\\n/bin/bash -c \"/src/run_bamsync.sh \\\n/data/\\)input_bam\n/data/\\({sample_id}/\\){sample_id}.Aligned.sortedByCoord.out.bam\n/data/\\({sample_id}/\\){sample_id}” done #######################################################################################################################################################################\n\n\n\nMark duplicates (Picard):\n\n\npath_to_data=“/home/gerard/RNAseq/GTEx”\nfor i in “${arr[@]}”;do docker run –rm -v \\(path_to_data:/data -t broadinstitute/gtex_rnaseq:V10 \\\n/bin/bash -c \"/src/run_MarkDuplicates.py \\\n/data/\\){i}/${i}.Aligned.sortedByCoord.out.bam\n\\({i}.Aligned.sortedByCoord.out.patched.md \\\n--output_dir /data/\\){i}” done #######################################################################################################################################################################\n\n\n\nRNA-SeQC: I am not using the python script descrbied in the GTEx pipeline because it is not detecting the .gtf file correctly. I am using the software directly,\nwith the same options as in the GTEx pipeline. The options that increase the number of exonic reads are: RF and using gencode.v26.GRCh38.ERCC.genes.collapsed_only.gtf as gencode reference. I start creating the RF folder in each of the samples folders: ####################################################################################################################################################################### for i in “\\({arr[@]}\";do mkdir /home/gerard/RNAseq/GTEx/\\){i}/RF rnaseqc gencode.v26.GRCh38.ERCC.genes.collapsed_only.gtf /home/gerard/RNAseq/GTEx/\\({i}/\\){i}.Aligned.sortedByCoord.out.md.bam /home/gerard/RNAseq/GTEx/${i}/RF\n-s ${i} –stranded RF -vv done #######################################################################################################################################################################\n\n\nRSEM transcript quantification:\n\n\npath_to_data=“/home/gerard/RNAseq”\nfor i in “${arr[@]}”;do docker run –rm -v \\(path_to_data:/data -t broadinstitute/gtex_rnaseq:V10 \\\n/bin/bash -c \"/src/run_RSEM.py \\\n/data/GTEx/rsem_reference \\\n/data/GTEx/\\){i}/\\({i}.Aligned.toTranscriptome.out.bam \\\n/data/GTEx/\\){i}/\\({i} \\\n--o /data/GTEx/\\){i}\n–is_stranded true\n–threads 24” done #######################################################################################################################################################################\n\n\n\nSample-level outputs in GCT format can be concatenated using combine_GCTs.py:\ndocker run –rm -v $path_to_data:/data -t broadinstitute/gtex_rnaseq:V10\n/bin/bash -c “python3 /src/combine_GCTs.py\n${rnaseqc_tpm_gcts} ${sample_set_id}.rnaseqc_tpm”"
  }
]